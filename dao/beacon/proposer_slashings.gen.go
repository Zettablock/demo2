// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package beacon

import (
	"time"
)

const TableNameProposerSlashing = "proposer_slashings"

// ProposerSlashing mapped from table <proposer_slashings>
type ProposerSlashing struct {
	SlotNumber           int64     `gorm:"column:slot_number;primaryKey" json:"slot_number"`
	Index                int32     `gorm:"column:index;primaryKey" json:"index"`
	Header1Slot          int64     `gorm:"column:header_1_slot" json:"header_1_slot"`
	Header1ProposerIndex int32     `gorm:"column:header_1_proposer_index" json:"header_1_proposer_index"`
	Header1ParentRoot    string    `gorm:"column:header_1_parent_root" json:"header_1_parent_root"`
	Header1StateRoot     string    `gorm:"column:header_1_state_root" json:"header_1_state_root"`
	Header1BodyRoot      string    `gorm:"column:header_1_body_root" json:"header_1_body_root"`
	Header1Signature     string    `gorm:"column:header_1_signature" json:"header_1_signature"`
	Header2Slot          int64     `gorm:"column:header_2_slot" json:"header_2_slot"`
	Header2ProposerIndex int32     `gorm:"column:header_2_proposer_index" json:"header_2_proposer_index"`
	Header2ParentRoot    string    `gorm:"column:header_2_parent_root" json:"header_2_parent_root"`
	Header2StateRoot     string    `gorm:"column:header_2_state_root" json:"header_2_state_root"`
	Header2BodyRoot      string    `gorm:"column:header_2_body_root" json:"header_2_body_root"`
	Header2Signature     string    `gorm:"column:header_2_signature" json:"header_2_signature"`
	BlockTime            time.Time `gorm:"column:block_time;not null" json:"block_time"`
	BlockNumber          int64     `gorm:"column:block_number;not null" json:"block_number"`
	BlockHash            string    `gorm:"column:block_hash;not null" json:"block_hash"`
	BlockDate            time.Time `gorm:"column:block_date;not null" json:"block_date"`
}

// TableName ProposerSlashing's table name
func (*ProposerSlashing) TableName() string {
	return TableNameProposerSlashing
}
